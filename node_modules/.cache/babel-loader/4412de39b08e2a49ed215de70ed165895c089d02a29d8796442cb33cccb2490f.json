{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// import { uiActions } from \"./ui-slice\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItems = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItems) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItems.quantity++;\n        existingItems.totalPrice = existingItems.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\n\n// Option-2(using action creator) :-\n// export const sendCartData = (cart) => {\n//     return async (dispatch) => {\n//         dispatch(\n//             uiActions.showNotification({\n//                 status: \"Pending\",\n//                 title: \"Sending...\",\n//                 message: \"Sending cart data!\",\n//             })\n//         );\n\n//         const sendRequest = async () => {\n//             const response = await fetch(\n//                 'https://redux-advanced-1c313-default-rtdb.firebaseio.com/cart.json',\n//                 {\n//                     method: \"PUT\",\n//                     body: JSON.stringify(cart)\n//                 });\n\n//             if (!response.ok) {\n//                 throw new Error(\"Sending cart data failed.\");\n//             }\n//         };\n\n//         try {\n//             await sendRequest();\n\n//             dispatch(\n//                 uiActions.showNotification({\n//                     status: \"Success\",\n//                     title: \"Success!\",\n//                     message: \"Sent cart data successfully!\",\n//                 })\n//             );\n//         } catch (error) {\n//             dispatch(\n//                 uiActions.showNotification({\n//                     status: \"Error\",\n//                     title: \"Error!\",\n//                     message: \"Sent cart data failed!\",\n//                 })\n//             );\n//         }\n//     };\n// };\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItems","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","existingItem","filter","cartActions","actions"],"sources":["C:/Complete Web Development/React.js/12.Redux-Advanced/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n// import { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n    },\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItems = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if (!existingItems) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            } else {\r\n                existingItems.quantity++;\r\n                existingItems.totalPrice = existingItems.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n// Option-2(using action creator) :-\r\n// export const sendCartData = (cart) => {\r\n//     return async (dispatch) => {\r\n//         dispatch(\r\n//             uiActions.showNotification({\r\n//                 status: \"Pending\",\r\n//                 title: \"Sending...\",\r\n//                 message: \"Sending cart data!\",\r\n//             })\r\n//         );\r\n\r\n//         const sendRequest = async () => {\r\n//             const response = await fetch(\r\n//                 'https://redux-advanced-1c313-default-rtdb.firebaseio.com/cart.json',\r\n//                 {\r\n//                     method: \"PUT\",\r\n//                     body: JSON.stringify(cart)\r\n//                 });\r\n\r\n//             if (!response.ok) {\r\n//                 throw new Error(\"Sending cart data failed.\");\r\n//             }\r\n//         };\r\n\r\n//         try {\r\n//             await sendRequest();\r\n\r\n//             dispatch(\r\n//                 uiActions.showNotification({\r\n//                     status: \"Success\",\r\n//                     title: \"Success!\",\r\n//                     message: \"Sent cart data successfully!\",\r\n//                 })\r\n//             );\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 uiActions.showNotification({\r\n//                     status: \"Error\",\r\n//                     title: \"Error!\",\r\n//                     message: \"Sent cart data failed!\",\r\n//                 })\r\n//             );\r\n//         }\r\n//     };\r\n// };\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C;;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACH,aAAa,GAAGI,MAAM,CAACC,OAAO,CAACL,aAAa;MAClDG,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO,CAACN,KAAK;IACtC,CAAC;IACDO,aAAaA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,aAAa,GAAGL,KAAK,CAACJ,KAAK,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACtER,KAAK,CAACH,aAAa,EAAE;MACrB,IAAI,CAACQ,aAAa,EAAE;QAChBL,KAAK,CAACJ,KAAK,CAACa,IAAI,CAAC;UACbD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAAEN,OAAO,CAACM,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAER,OAAO,CAACM,KAAK;UACzBhB,IAAI,EAAEU,OAAO,CAACS;QAClB,CAAC,CAAC;MACN,CAAC,MAAM;QACHR,aAAa,CAACM,QAAQ,EAAE;QACxBN,aAAa,CAACO,UAAU,GAAGP,aAAa,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACvE;IACJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMa,YAAY,GAAGf,KAAK,CAACJ,KAAK,CAACU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DR,KAAK,CAACH,aAAa,EAAE;MACrB,IAAIkB,YAAY,CAACJ,QAAQ,KAAK,CAAC,EAAE;QAC7BX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACoB,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACHO,YAAY,CAACJ,QAAQ,EAAE;QACvBI,YAAY,CAACH,UAAU,GAAGG,YAAY,CAACH,UAAU,GAAGG,YAAY,CAACL,KAAK;MAC1E;IACJ;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMO,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAC5C,eAAezB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}